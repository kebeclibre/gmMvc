<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:property-placeholder
		location="/WEB-INF/spring/appServlet/jdbc.properties" />

	<beans:bean id="mainDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"></beans:property>
		<beans:property name="url" value="${jdbc.url}"></beans:property>
		<beans:property name="username" value="${jdbc.username}"></beans:property>
		<beans:property name="password" value="${jdbc.password}"></beans:property>
	</beans:bean>


	<security:http auto-config="true" use-expressions="true" >
		<security:intercept-url pattern="/user/login"
			access="hasRole('ROLE_CLIENT') OR hasRole('ROLE_PARTNER')"  />
<!-- 			access="hasAnyRole('ROLE_CLIENT','ROLE_PARTNER')" /> -->
	
		<security:intercept-url pattern="/user/**"
			access="hasRole('ROLE_CLIENT')" />
			
		<security:form-login login-page="/"
			default-target-url="/user/login" authentication-failure-url="/"
			username-parameter="username" password-parameter="password"
			login-processing-url="/j_spring_security_check" />

	</security:http>

<!-- 	<security:http auto-config="true" pattern="/partner/**"> -->
<!-- 		<security:intercept-url pattern="/partner/**" -->
<!-- 			access="hasRole('ROLE_PARTNER')" /> -->
<!-- 		<security:form-login login-page="/connectAsPartner" -->
<!-- 			default-target-url="/partner/login" authentication-failure-url="/connectAsPartner" -->
<!-- 			username-parameter="username" password-parameter="password" -->
<!-- 			login-processing-url="/j_spring_security_check" /> -->
<!-- 	</security:http> -->

	<security:authentication-manager alias="authenticationManager"
		erase-credentials="false">
<!-- 		<security:authentication-provider> -->
<!-- 			<security:user-service> -->
<!-- 				<security:user name="lucas" password="lucas" -->
<!-- 					authorities="ROLE_CLIENT" /> -->
<!-- 				<security:user name="bob" password="bob" authorities="ROLE_PARTNER" /> -->
<!-- 			</security:user-service> -->
<!-- 		</security:authentication-provider> -->

		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="mainDataSource"
				users-by-username-query="select username,password, isActive from clients where username=? and isActive=1"
				authorities-by-username-query="select username, role from roles where username = ?"
				role-prefix="ROLE_" />
		</security:authentication-provider>

		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="mainDataSource"
				users-by-username-query="select username,password, isActive from partners where username=? and isActive=1"
				authorities-by-username-query="select username, role from roles where username = ?"
				role-prefix="ROLE_"  />
		</security:authentication-provider>

	</security:authentication-manager>

	<beans:bean id="filterMultipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<beans:property name="maxUploadSize" value="-1" />
	</beans:bean>

</beans:beans>
